function startFunction() {
  let message = ` 
   <b>рІерѕџрІФрѕхрЇѕрѕЇрїјрЅх ріарїѕрѕЇрїЇрѕјрЅх рІерЅхріЏрІЇ ріљрІЇ ? </b> 

рІерѕєрѕхрЇњрЅ│рѕјрЅйріЋ рЇБ рІерѕђріфрѕърЅйріЋ рЇБ рІерѕЮрѕГрѕўрѕФ рїБрЅбрІФ ріЦріЊ рІерѕўрІхріЃріњрЅх рЅцрЅХрЅйріЋ ріарІхрѕФрѕ╗ рѕѕрѕЏрІѕрЅЁ рЇБ <b> <u>рІерѕЁріГрѕЮріЊ рѕўрѕерїЃ</u> </b>рІерѕџрѕѕрІЇріЋ  рІГрїФріЉ

рЅарЅђрїЦрЅ│ рІерЅ│рІўрІўрѕјрЅхріЋ рѕўрІхріЃріњрЅх рЅцрЅхрІј рІхрѕерѕх ріЦріЋрІ▓рѕўрїБрѕЇрІј ріерЇѕрѕѕрїЅ <b> <u>рѕўрІхріЃріњрЅх рѕЏрІўрІЮ</u> </b>рІерѕџрѕѕрІЇріЋ рІГрїФріЉ
    

    `;

  bot.command(["start", "main"], (ctx) => {
    ctx.reply(message, {
      parse_mode: "HTML",
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: "рІерѕЁріГрѕЮріЊ рѕўрѕерїЃ рІГрЇѕрѕЇрїЅ ",
              callback_data: "search",
            },
          ],
          [
            {
              text: "­ЪњірѕўрІхріЃріњрЅх рѕѕрѕЏрІўрІЮ ",
              callback_data: "delivery",
            },
          ],
        ],
      },
    });
  });

  //Main Menu action method
  bot.action(["start", "menu"], (ctx) => {
    ctx.deleteMessage();
    ctx.reply(message, {
      parse_mode: "HTML",
      reply_markup: {
        inline_keyboard: [
          [
            {
              text: "рІерѕЁріГрѕЮріЊ рѕўрѕерїЃ рІГрЇѕрѕЇрїЅ ",
              callback_data: "search",
            },
          ],
          [
            {
              text: "­ЪњірѕўрІхріЃріњрЅх рѕѕрѕЏрІўрІЮ ",
              callback_data: "delivery",
            },
          ],
        ],
      },
    });
  });
}

module.exports = { startFunction };
